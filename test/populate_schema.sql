
-- INSERT DEPARTMENT

MERGE INTO DEPARTMENT
    USING (
        SELECT distinct 
        ASSIGNED_PERSON_DEPARTMENT 
        FROM DATA_TABLE
        ) T2
    ON (T2.ASSIGNED_PERSON_DEPARTMENT = DEPARTMENT.NAME)
WHEN NOT MATCHED THEN
    INSERT (name) VALUES (T2.ASSIGNED_PERSON_DEPARTMENT);

--SELECT * FROM DEPARTMENT;
--
--DELETE FROM DEPARTMENT;
--

-- INSERT EMPLOYEES

MERGE INTO EMPLOYEE
    USING (
    SELECT DISTINCT 
    ASSIGNED_PERSON_NAME FNAME, 
    ASSIGNED_PERSON_LAST_NAME AS LNAME,
    department.id dep_id
    FROM DATA_TABLE DT1
    left join department
    on department.name = dt1.assigned_person_department 
    ) T2
    ON (T2.FNAME = EMPLOYEE.FIRSTNAME AND T2.LNAME = EMPLOYEE.LASTNAME)
WHEN NOT MATCHED THEN
    INSERT (firstname, lastname, department_id) VALUES (T2.FNAME, T2.LNAME, dep_id);

--select * from employee;
--DELETE FROM EMPLOYEE;

-- INSERT PROJECT

MERGE INTO PROJECT
    USING (
        SELECT DISTINCT 
        PROJECT_NAME AS NAME, 
        PROJECT_DESCRIPTION AS DESCEND,     
        PROJECT_START_DATE AS STARTD, 
        PROJECT_END_DATE AS ENDD
        FROM DATA_TABLE
        ) T2
    ON (
        T2.NAME = PROJECT.NAME
        )
WHEN NOT MATCHED THEN
    INSERT (name, description, start_date, end_date) 
    VALUES (T2.NAME, T2.DESCEND, T2.STARTD, T2.ENDD);

--SELECT * FROM PROJECT;
--DELETE FROM PROJECT;

-- INSERT STAGES

MERGE INTO STAGE 
    USING (
        SELECT DISTINCT 
        TD.STAGE_NAME SNAME, 
        PR.ID ID, 
        DT.PROJECT_NAME, 
        TD.STAGE_START_DATE SDATE, 
        TD.STAGE_END_DATE EDATE
        FROM DATA_TABLE TD
        LEFT JOIN DATA_TABLE DT
        ON TD.STAGE_NAME = DT.STAGE_NAME
        LEFT JOIN PROJECT PR
        ON PR.NAME = DT.PROJECT_NAME
        ) T2
    ON (
    T2.SNAME = STAGE.NAME AND 
    T2.SDATE = STAGE.START_DATE AND 
    T2.EDATE = STAGE.END_DATE AND
    T2.ID = STAGE.PROJECT_ID
    )
WHEN NOT MATCHED THEN
    INSERT (stage.NAME, START_DATE, END_DATE, PROJECT_ID) VALUES (T2.SNAME, T2.SDATE, T2.EDATE, T2.ID);

--SELECT * FROM STAGE;
--DELETE FROM STAGE;

-- INSERT TASKS

MERGE INTO TASK 
    USING (
        SELECT DISTINCT 
            DT1.STAGE_TASKS_CODE TCODE, 
            DT1.STAGE_TASKS_START_DATE TSDATE, 
            DT1.STAGE_TASKS_END_DATE TEDATE, 
            DT1.STAGE_TASKS_NAME TNAME, 
            DT1.STAGE_TASKS_STATUS TSTATUS,
            PROJECT.ID PROJ_ID,
            STAGE.ID TSID,
            EMPLOYEE.ID TEID
        FROM DATA_TABLE DT1
        LEFT JOIN DATA_TABLE DT2
        ON DT2.STAGE_TASKS_CODE = DT1.STAGE_TASKS_CODE
        LEFT JOIN PROJECT 
        ON PROJECT.NAME = DT2.PROJECT_NAME
        LEFT JOIN STAGE
        ON DT1.STAGE_NAME = STAGE.NAME AND DT1.STAGE_START_DATE = STAGE.START_DATE AND DT1.STAGE_END_DATE = STAGE.END_DATE
        LEFT JOIN EMPLOYEE
        ON EMPLOYEE.FIRSTNAME = DT1.ASSIGNED_PERSON_NAME AND EMPLOYEE.LASTNAME = DT1.ASSIGNED_PERSON_LAST_NAME
    ) T2
    ON (
        TASK.PKEY = T2.TCODE AND 
        TASK.NAME = T2.TNAME AND 
        TASK.START_DATE = T2.TSDATE AND 
        TASK.END_DATE = T2.TEDATE AND 
        TASK.PROJECT_ID = T2.PROJ_ID AND 
        TASK.STATUS = T2.TSTATUS AND
        TASK.ASSIGNEE_ID = T2.TEID AND
        TASK.STAGE_ID = T2.TSID
        )
WHEN NOT MATCHED THEN
    INSERT (TASK.PKEY, TASK.PROJECT_ID, TASK.NAME, TASK.STATUS, TASK.STAGE_ID, TASK.START_DATE, TASK.END_DATE, TASK.ASSIGNEE_ID) VALUES (T2.TCODE, T2.PROJ_ID, T2.TNAME, T2.TSTATUS, T2.TSID, T2.TSDATE, T2.TEDATE, T2.TEID);
    
--SELECT * FROM TASK;
--DELETE FROM TASK;

-- INSERT TEAMS

MERGE INTO TEAM
    USING (
        SELECT DISTINCT
        PROJECT.ID T_PROJ_ID,
        EMPLOYEE.ID T_PERS_ID
        FROM DATA_TABLE DT1
        LEFT JOIN PROJECT
        ON PROJECT.NAME = DT1.PROJECT_NAME
        LEFT JOIN EMPLOYEE
        ON EMPLOYEE.FIRSTNAME = DT1.TEAM_LEAD_NAME AND EMPLOYEE.LASTNAME = DT1.TEAM_LEAD_LAST_NAME
    ) T2
    ON (TEAM.PROJECT_ID = T2.T_PROJ_ID AND TEAM.LEAD_ID = T2.T_PERS_ID AND T2.T_PERS_ID != null)
WHEN NOT MATCHED THEN
    INSERT (TEAM.PROJECT_ID, TEAM.LEAD_ID) VALUES(T2.T_PROJ_ID, T2.T_PERS_ID);

DELETE FROM TEAM WHERE LEAD_ID IS NULL;

MERGE INTO EMPLOYEE
    USING (
        SELECT DISTINCT
        TEAM.LEAD_ID L_ID,
        TEAM.ID T_ID
        FROM TEAM
    ) T2 
    ON (T2.L_ID = EMPLOYEE.ID)
WHEN MATCHED THEN 
    UPDATE SET EMPLOYEE.TEAM_ID = T2.T_ID;
    
MERGE INTO EMPLOYEE
    USING (
        SELECT DISTINCT
        DT1.ASSIGNED_PERSON_NAME EMP_FIRSTNAME,
        DT1.ASSIGNED_PERSON_LAST_NAME EMP_LASTNAME,
        TEAM.ID TEAM_ID
        FROM DATA_TABLE DT1
        LEFT JOIN EMPLOYEE EMP
        ON EMP.FIRSTNAME = DT1.TEAM_LEAD_NAME AND EMP.LASTNAME = DT1.TEAM_LEAD_LAST_NAME
        LEFT JOIN TEAM
        ON TEAM.LEAD_ID = EMP.ID
    ) T2
    ON (T2.EMP_FIRSTNAME = EMPLOYEE.FIRSTNAME AND T2.EMP_LASTNAME = EMPLOYEE.LASTNAME)
WHEN MATCHED THEN
    UPDATE SET EMPLOYEE.TEAM_ID = T2.TEAM_ID;
--SELECT * FROM TEAM;
--delete from team;

-- INSERT ROLES
MERGE INTO ROLE
    USING (
        SELECT DISTINCT
        DT1.ASSIGNED_PERSON_POSITION AS ROLE_NAME
        FROM DATA_TABLE DT1
        LEFT JOIN EMPLOYEE
        ON EMPLOYEE.FIRSTNAME = DT1.ASSIGNED_PERSON_NAME AND EMPLOYEE.LASTNAME = DT1.ASSIGNED_PERSON_LAST_NAME
    ) T2
    ON (T2.ROLE_NAME = ROLE.LABEL)
WHEN NOT MATCHED THEN
    INSERT (ROLE.LABEL) VALUES (T2.ROLE_NAME);

--SELECT * FROM ROLE;

-- INSERT EMPLOYEE_ROLE
MERGE INTO EMPLOYEE_ROLE
    USING (
        SELECT DISTINCT
        EMPLOYEE.ID EMP_ID,
        ROLE.ID R_ID
        
        FROM DATA_TABLE DT1
        LEFT JOIN EMPLOYEE 
        ON EMPLOYEE.FIRSTNAME = DT1.ASSIGNED_PERSON_NAME AND EMPLOYEE.LASTNAME = DT1.ASSIGNED_PERSON_LAST_NAME
        LEFT JOIN ROLE
        ON ROLE.LABEL = DT1.ASSIGNED_PERSON_POSITION
    ) T2
    ON (T2.R_ID = EMPLOYEE_ROLE.ROLE_ID AND T2.EMP_ID = EMPLOYEE_ROLE.EMPLOYEE_ID)
WHEN NOT MATCHED THEN
    INSERT (EMPLOYEE_ROLE.ROLE_ID, EMPLOYEE_ROLE.EMPLOYEE_ID) VALUES (T2.R_ID, T2.EMP_ID);
